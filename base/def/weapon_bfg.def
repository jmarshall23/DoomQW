entityDef projectile_bfg {
	"spawnclass"				"idBFGProjectile"
	"mins"						"-10 -10 -10"
	"maxs"						"10 10 10"
	"cone"						"3"
	"model" 					"models/particles/bfg_bolt/bfg_bolt.lwo"
	"model_two"					"models/particles/bfg_bolt/bfg_bolt2.lwo"

	"no_contents"				"1"
							
	"def_damage"				"damage_bfg"
	"def_damageFreq"			"damage_bfgFreq"
	"def_splash_damage"			"damage_bfgSplash"
	
	"beam_WidthFly"				"24"
	"beam_WidthExplode"			"128"
	"skin_beam"					"skins/duffybolt"
	
	"snd_fly"					"player_bfg_fly"
	"snd_beam"					"player_bfg_arc"
	"remove_time"				"7000"
	
	"damageRadius"				"2048"
								
	"launchFromBarrel"			"1"
	"health"					"5"					// amount of damage projectile can take if damaged (0 means it can't be destroyed)
	"velocity"					"350 0 0"			// how fast the projectile leaves the gun (or distance if fuse is 0)
	"angular_velocity"			"0 0 0"				// how the projectile is rotating when it leaves the gun
	"thrust"					"0"					// the rate of acceleration (always in the direction of the projectiles model)
	"thrust_start"				"0"					// when to start accelerating
	"thrust_end"				"0"					// when to stop accelerating
	"linear_friction"			"0"					// "air" friction
	"angular_friction"			"0"
	"contact_friction"			"0"
	"bounce"					"0"					// how much speed a projectile retains when it bounces off of objects (coefficient of restitution).  0 means no bounce.
	"mass"						"50"
	"gravity"					"0"					// how much gravity affects the trajectory.  gravity direction is same as the entity that fired it.
	"fuse"						"4.5"					// how long before the projectile is removed or self-detonates.  Use 0 for beam weapons (velocity == distance).
								
	"detonate_on_fuse"			"1"					// whether projectile should detonate when it's fuse runs out
	"detonate_on_death"			"1"					// whether projectile should detonate when it's "killed" (health runs out)
	"detonate_on_world"			"1"					// whether projectile should detonate when it hits an obstacle
	"detonate_on_actor"			"1"					// whether projectile should detonate when it hits a character in the game
								
	"impact_damage_effect"		"1"					// whether projectile causes blood splats from characters that bleed
	"impact_gib"				"1"					// whether projectile can gib a character or not (for example: bullets don't gib, but rockets do)
								
	"mtr_detonate"				"textures/decals/bfg_wallmark"
	"decal_size"				"72" 

	"smoke_fly"					""					// particle effect while in the air
	"smoke_detonate"			""					// particle effect when detonates
	"smoke_residue"				""					// particle effect while in the air
	"smoke_bounce"				""					// particle effect when bounces
	"smoke_fuse"				""					// particle effect when removed from fuse expiring

	"model_detonate"			"bfgExplosion.prt"
	"debris_count"				"6"
	"def_debris"				"debris_largeshrapnel"
	"def_shrapnel"				"debris_shrapnel"

	"mtr_light_shader"			"lights/baronflash"
	"light_color"				"1 1 1"
	"light_radius"				"160"
	"light_offset"				"0 0 -16"

	"mtr_explode_light_shader"	"muzzleflash"
	"explode_light_color"		"0 1 0"
	"explode_light_radius"		"300"
	"explode_light_fadetime"	"0.25"

								// sound effect while in the air
	"snd_explode"				"player_bfg_explode"
	"snd_explode2"				"player_bfg_2explode"
	"snd_explode3"				"player_bfg_3explode"
	"snd_explode4"				"player_bfg_4explode"
}

// used by Campbell in cinematics
entityDef projectile_bfg_cinematic {
	"inherit"					"projectile_bfg"
	"no_contents"				"1"
	"velocity"					"250 0 0"
	"def_damage"				"damage_bfg_cinematic"
	"def_damageFreq"			"damage_bfgFreq_cinematic"
	"def_splash_damage"			"damage_bfgSplash_cinematic"
}

entityDef damage_bfg_cinematic {
	"inherit"					"damage_bfg"
	"ignore_player"				"1"
}

entityDef damage_bfgFreq_cinematic {
	"inherit"					"damage_bfgFreq"
	"ignore_player"				"1"
}

entityDef damage_bfgSplash_cinematic {
	"inherit"					"damage_bfgSplash"
	"ignore_player"				"1"
}

entityDef damage_bfg_overcharge {
	"damage"					"500"
	"radius"					"256"
	"push"						"10000"
	"knockback"					"200"
}
